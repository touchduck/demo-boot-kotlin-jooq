/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infra.hawaii.tables;


import com.example.demo.infra.hawaii.Indexes;
import com.example.demo.infra.hawaii.Keys;
import com.example.demo.infra.hawaii.Public;
import com.example.demo.infra.hawaii.tables.records.MemosRecord;
import org.jooq.Record;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Memos extends TableImpl<MemosRecord> {

    /**
     * The reference instance of <code>public.memos</code>
     */
    public static final Memos MEMOS = new Memos();
    private static final long serialVersionUID = 28975271;
    /**
     * The column <code>public.memos.id</code>.
     */
    public final TableField<MemosRecord, UUID> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");
    /**
     * The column <code>public.memos.user_id</code>.
     */
    public final TableField<MemosRecord, UUID> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");
    /**
     * The column <code>public.memos.title</code>.
     */
    public final TableField<MemosRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "");
    /**
     * The column <code>public.memos.body</code>.
     */
    public final TableField<MemosRecord, String> BODY = createField(DSL.name("body"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");
    /**
     * The column <code>public.memos.created_at</code>.
     */
    public final TableField<MemosRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");
    /**
     * The column <code>public.memos.updated_at</code>.
     */
    public final TableField<MemosRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");
    /**
     * The column <code>public.memos.deleted_at</code>.
     */
    public final TableField<MemosRecord, LocalDateTime> DELETED_AT = createField(DSL.name("deleted_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>public.memos</code> table reference
     */
    public Memos() {
        this(DSL.name("memos"), null);
    }

    /**
     * Create an aliased <code>public.memos</code> table reference
     */
    public Memos(String alias) {
        this(DSL.name(alias), MEMOS);
    }

    /**
     * Create an aliased <code>public.memos</code> table reference
     */
    public Memos(Name alias) {
        this(alias, MEMOS);
    }

    private Memos(Name alias, Table<MemosRecord> aliased) {
        this(alias, aliased, null);
    }

    private Memos(Name alias, Table<MemosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Memos(Table<O> child, ForeignKey<O, MemosRecord> key) {
        super(child, key, MEMOS);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemosRecord> getRecordType() {
        return MemosRecord.class;
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MEMOS_PKEY);
    }

    @Override
    public UniqueKey<MemosRecord> getPrimaryKey() {
        return Keys.MEMOS_PKEY;
    }

    @Override
    public List<UniqueKey<MemosRecord>> getKeys() {
        return Arrays.<UniqueKey<MemosRecord>>asList(Keys.MEMOS_PKEY);
    }

    @Override
    public List<ForeignKey<MemosRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MemosRecord, ?>>asList(Keys.MEMOS__FK_MEMOS_USER_ID_ID);
    }

    public Users users() {
        return new Users(this, Keys.MEMOS__FK_MEMOS_USER_ID_ID);
    }

    @Override
    public Memos as(String alias) {
        return new Memos(DSL.name(alias), this);
    }

    @Override
    public Memos as(Name alias) {
        return new Memos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Memos rename(String name) {
        return new Memos(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Memos rename(Name name) {
        return new Memos(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, UUID, String, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
