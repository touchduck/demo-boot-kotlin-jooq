/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infra.hawaii.tables.daos;


import com.example.demo.infra.hawaii.tables.Users;
import com.example.demo.infra.hawaii.tables.records.UsersRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersDao extends DAOImpl<UsersRecord, com.example.demo.infra.hawaii.tables.pojos.Users, UUID> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, com.example.demo.infra.hawaii.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    public UsersDao(Configuration configuration) {
        super(Users.USERS, com.example.demo.infra.hawaii.tables.pojos.Users.class, configuration);
    }

    @Override
    public UUID getId(com.example.demo.infra.hawaii.tables.pojos.Users object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(Users.USERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchById(UUID... values) {
        return fetch(Users.USERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.demo.infra.hawaii.tables.pojos.Users fetchOneById(UUID value) {
        return fetchOne(Users.USERS.ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByUsername(String... values) {
        return fetch(Users.USERS.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public com.example.demo.infra.hawaii.tables.pojos.Users fetchOneByUsername(String value) {
        return fetchOne(Users.USERS.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password_hash BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfPasswordHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PASSWORD_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_hash IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByPasswordHash(String... values) {
        return fetch(Users.USERS.PASSWORD_HASH, values);
    }

    /**
     * Fetch records that have <code>nickname BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfNickname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.NICKNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nickname IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByNickname(String... values) {
        return fetch(Users.USERS.NICKNAME, values);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByFirstName(String... values) {
        return fetch(Users.USERS.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByLastName(String... values) {
        return fetch(Users.USERS.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>authorities BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfAuthorities(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.AUTHORITIES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>authorities IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByAuthorities(String... values) {
        return fetch(Users.USERS.AUTHORITIES, values);
    }

    /**
     * Fetch records that have <code>is_enabled BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfIsEnabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Users.USERS.IS_ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_enabled IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByIsEnabled(Boolean... values) {
        return fetch(Users.USERS.IS_ENABLED, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByEmail(String... values) {
        return fetch(Users.USERS.EMAIL, values);
    }

    /**
     * Fetch records that have <code>email_confirmed BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfEmailConfirmed(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Users.USERS.EMAIL_CONFIRMED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email_confirmed IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByEmailConfirmed(Boolean... values) {
        return fetch(Users.USERS.EMAIL_CONFIRMED, values);
    }

    /**
     * Fetch records that have <code>phone_number BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfPhoneNumber(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PHONE_NUMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone_number IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByPhoneNumber(String... values) {
        return fetch(Users.USERS.PHONE_NUMBER, values);
    }

    /**
     * Fetch records that have <code>phone_number_confirmed BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfPhoneNumberConfirmed(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Users.USERS.PHONE_NUMBER_CONFIRMED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone_number_confirmed IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByPhoneNumberConfirmed(Boolean... values) {
        return fetch(Users.USERS.PHONE_NUMBER_CONFIRMED, values);
    }

    /**
     * Fetch records that have <code>two_factor_enabled BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfTwoFactorEnabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Users.USERS.TWO_FACTOR_ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>two_factor_enabled IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByTwoFactorEnabled(Boolean... values) {
        return fetch(Users.USERS.TWO_FACTOR_ENABLED, values);
    }

    /**
     * Fetch records that have <code>lockout_end BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfLockoutEnd(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Users.USERS.LOCKOUT_END, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lockout_end IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByLockoutEnd(LocalDateTime... values) {
        return fetch(Users.USERS.LOCKOUT_END, values);
    }

    /**
     * Fetch records that have <code>lockout_enabled BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfLockoutEnabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Users.USERS.LOCKOUT_ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lockout_enabled IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByLockoutEnabled(Boolean... values) {
        return fetch(Users.USERS.LOCKOUT_ENABLED, values);
    }

    /**
     * Fetch records that have <code>access_failed_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfAccessFailedCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Users.USERS.ACCESS_FAILED_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>access_failed_count IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByAccessFailedCount(Integer... values) {
        return fetch(Users.USERS.ACCESS_FAILED_COUNT, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Users.USERS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Users.USERS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Users.USERS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Users.USERS.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchRangeOfDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Users.USERS.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<com.example.demo.infra.hawaii.tables.pojos.Users> fetchByDeletedAt(LocalDateTime... values) {
        return fetch(Users.USERS.DELETED_AT, values);
    }
}
